// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VouViajar.Modulos.Eventos.Infrastructure.Persistence;

namespace VouViajar.Modulos.Eventos.Migrations
{
    [DbContext(typeof(EventoDbContext))]
    partial class EventoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Eventos")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", b =>
                {
                    b.Property<int>("EventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenciaID")
                        .HasColumnType("int");

                    b.Property<string>("Arquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CadastradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrigemID")
                        .HasColumnType("int");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacaoID")
                        .HasColumnType("int");

                    b.Property<int>("TipoID")
                        .HasColumnType("int");

                    b.Property<int>("TotalVagas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorVaga")
                        .HasPrecision(5)
                        .HasColumnType("decimal(5)");

                    b.HasKey("EventoID");

                    b.HasIndex("DestinoID")
                        .IsUnique();

                    b.HasIndex("OrigemID")
                        .IsUnique();

                    b.HasIndex("SituacaoID")
                        .IsUnique();

                    b.HasIndex("TipoID")
                        .IsUnique();

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("VouViajar.Modulos.Eventos.Domain.Entities.Localidade", b =>
                {
                    b.Property<int>("LocalidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalidadeID");

                    b.ToTable("Localidade");
                });

            modelBuilder.Entity("VouViajar.Modulos.Eventos.Domain.Entities.Situacao", b =>
                {
                    b.Property<int>("SituacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SituacaoID");

                    b.ToTable("Situacao");
                });

            modelBuilder.Entity("VouViajar.Modulos.Eventos.Domain.Entities.Tipo", b =>
                {
                    b.Property<int>("TipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoID");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", b =>
                {
                    b.HasOne("VouViajar.Modulos.Eventos.Domain.Entities.Localidade", "Destino")
                        .WithOne()
                        .HasForeignKey("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", "DestinoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VouViajar.Modulos.Eventos.Domain.Entities.Localidade", "Origem")
                        .WithOne()
                        .HasForeignKey("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", "OrigemID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VouViajar.Modulos.Eventos.Domain.Entities.Situacao", "Situacao")
                        .WithOne()
                        .HasForeignKey("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", "SituacaoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VouViajar.Modulos.Eventos.Domain.Entities.Tipo", "Tipo")
                        .WithOne()
                        .HasForeignKey("VouViajar.Modulos.Eventos.Domain.Entities.Aggregates.Evento", "TipoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Origem");

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
